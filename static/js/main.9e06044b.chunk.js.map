{"version":3,"sources":["components/Header/Header.jsx","components/Error/Error.jsx","components/Gravatars/Gravatars.jsx","components/Filter/Filter.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","_ref","onHelp","react_default","a","createElement","index_es","container","direction","alignItems","spacing","item","variant","aria-label","color","onClick","Help_default","withStyles","theme","createStyles","errorText","fontFamily","classes","error","component","className","displayName","mode","JSON","stringify","undefined","StyledGravatar","actionArea","maxWidth","image","height","textOverflow","overflow","id","owner","imageUrl","title","marginTop","unit","_ref2","gravatars","length","map","gravatar","Object","assign","key","StyledFilter","orderBySelect","marginLeft","onToggleWithName","onToggleWithImage","onOrderBy","withName","withImage","orderBy","control","checked","onChange","event","label","value","target","labelPlacement","client","ApolloClient","uri","process","cache","InMemoryCache","GRAVATARS_QUERY","gql","_templateObject","taggedTemplateLiteral","App","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleHelpDialog","setState","state","objectSpread","showHelpDialog","gotoQuickStartGuide","window","location","href","_this2","_this$state","react_apollo_browser_umd","components_Header_Header","components_Filter_Filter","field","query","variables","where","imageUrl_starts_with","displayName_not","data","loading","style","width","components_Error_Error","components_Gravatars_Gravatars","fullScreen","open","onClose","aria-labelledby","autoFocus","Component","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qWAqBeA,EAjBA,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,OAAH,OACbC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,WAAW,SAASC,QAAS,IAC3DP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMK,MAAI,GACRR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYM,QAAQ,SAApB,6BAEFT,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMK,MAAI,GACRR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEO,aAAW,SACXC,MAAM,YACNC,QAAS,kBAAMb,GAAUA,MAEzBC,EAAAC,EAAAC,cAACW,EAAAZ,EAAD,kBCYOa,uBAxBK,SAAAC,GAAK,OACvBC,uBAAa,CACXC,UAAW,CACTC,WAAY,qCAqBHJ,CAjBD,SAAAhB,GAAA,IAAGqB,EAAHrB,EAAGqB,QAASC,EAAZtB,EAAYsB,MAAZ,OACZpB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,UACxBL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMK,MAAI,GACRR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYM,QAAQ,KAAKY,UAAU,KAAKC,UAAWH,EAAQI,aAA3D,UAIFvB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMK,MAAI,GACRR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,WAAS,GACbJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYqB,KAAK,YAAYb,MAAM,aACjCX,EAAAC,EAAAC,cAAA,OAAKoB,UAAWH,EAAQF,WAAYQ,KAAKC,UAAUN,OAAOO,EAAW,UCuCzEC,EAAiBd,qBA/CA,SAAAC,GAAK,OAC1BC,uBAAa,CACXa,WAAY,CACVC,SAAU,KAEZC,MAAO,CACLC,OAAQ,KAEVT,YAAa,CACXU,aAAc,WACdC,SAAU,UAEZC,GAAI,CACFF,aAAc,WACdC,SAAU,UAEZE,MAAO,CACLH,aAAc,WACdC,SAAU,aA6BOpB,CAzBN,SAAAhB,GAAA,IAAGqB,EAAHrB,EAAGqB,QAASgB,EAAZrC,EAAYqC,GAAIZ,EAAhBzB,EAAgByB,YAAac,EAA7BvC,EAA6BuC,SAAUD,EAAvCtC,EAAuCsC,MAAvC,OACfpC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMK,MAAI,GACRR,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAgBmB,UAAWH,EAAQU,YAChCQ,GACCrC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWmB,UAAWH,EAAQY,MAAOA,MAAOM,EAAUC,MAAOf,IAE/DvB,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYM,QAAQ,KAAKY,UAAU,KAAKC,UAAWH,EAAQI,aACxDA,GAAe,UAElBvB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYQ,MAAM,iBAAlB,MACAX,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYkB,UAAU,IAAIC,UAAWH,EAAQgB,IAC1CA,GAEHnC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYQ,MAAM,iBAAlB,SACAX,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYkB,UAAU,IAAIC,UAAWH,EAAQiB,OAC1CA,SAkCEtB,uBAxBS,SAAAC,GAAK,OAC3BC,uBAAa,CACXsB,MAAO,CACLC,UAAgC,EAArBxB,EAAMR,QAAQiC,SAqBhB1B,CAjBG,SAAA2B,GAAA,IAAGtB,EAAHsB,EAAGtB,QAASuB,EAAZD,EAAYC,UAAZ,OAChB1C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASE,QAAS,IAC1CP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMK,MAAI,GACRR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYM,QAAQ,QAAQa,UAAWH,EAAQmB,OAC5CI,EAAUC,OADb,eAIF3C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMK,MAAI,GACRR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAME,QAAS,IACtCmC,EAAUE,IAAI,SAAAC,GAAQ,OACrB7C,EAAAC,EAAAC,cAAC0B,EAADkB,OAAAC,OAAA,CAAgBC,IAAKH,EAASV,IAAQU,WCTjCI,EAFMnC,qBAxDA,SAAAC,GAAK,OACxBC,uBAAa,CACXkC,cAAe,CACbC,WAAYpC,EAAMR,QAAQiC,SAqDX1B,CAjDN,SAAAhB,GAAA,IACbqB,EADarB,EACbqB,QACAiC,EAFatD,EAEbsD,iBACAC,EAHavD,EAGbuD,kBACAC,EAJaxD,EAIbwD,UACAC,EALazD,EAKbyD,SACAC,EANa1D,EAMb0D,UACAC,EAPa3D,EAOb2D,QAPa,OASbzD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMK,MAAI,GACRR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,OACxBL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuD,QACE1D,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwD,QAASJ,EACTK,SAAU,SAAAC,GAAK,OAAIT,GAAoBA,OAG3CU,MAAM,eAER9D,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuD,QACE1D,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwD,QAASH,EACTI,SAAU,SAAAC,GAAK,OAAIR,GAAqBA,OAG5CS,MAAM,gBAER9D,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuD,QACE1D,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEmB,UAAWH,EAAQ+B,cACnBa,MAAON,EACPG,SAAU,SAAAC,GAAK,OAAIP,GAAaA,EAAUO,EAAMG,OAAOD,SAEvD/D,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAU4D,MAAM,MAAhB,MACA/D,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAU4D,MAAM,YAAhB,SACA/D,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAU4D,MAAM,eAAhB,QACA/D,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAU4D,MAAM,SAAhB,UAGJD,MAAM,YACNG,eAAe,cCtCvB,IAAMC,EAAS,IAAIC,IAAa,CAC9BC,IAAKC,+DACLC,MAAO,IAAIC,MAGPC,EAAkBC,YAAHC,MAAA5B,OAAA6B,EAAA,EAAA7B,CAAA,gPAuGN8B,cA3Fb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAhC,OAAAiC,EAAA,EAAAjC,CAAAkC,KAAAJ,IACjBE,EAAAhC,OAAAmC,EAAA,EAAAnC,CAAAkC,KAAAlC,OAAAoC,EAAA,EAAApC,CAAA8B,GAAAO,KAAAH,KAAMH,KASRO,iBAAmB,WACjBN,EAAKO,SAAS,SAAAC,GAAK,OAAAxC,OAAAyC,EAAA,EAAAzC,CAAA,GAAUwC,EAAV,CAAiBE,gBAAiBF,EAAME,oBAX1CV,EAcnBW,oBAAsB,WACpBC,OAAOC,SAASC,KAAO,yCAbvBd,EAAKQ,MAAQ,CACX9B,WAAW,EACXD,UAAU,EACVE,QAAS,cACT+B,gBAAgB,GANDV,wEAkBV,IAAAe,EAAAb,KAAAc,EACkDd,KAAKM,MAAtD9B,EADDsC,EACCtC,UAAWD,EADZuC,EACYvC,SAAUE,EADtBqC,EACsBrC,QAAS+B,EAD/BM,EAC+BN,eAEtC,OACExF,EAAAC,EAAAC,cAAC6F,EAAA,eAAD,CAAgB7B,OAAQA,GACtBlE,EAAAC,EAAAC,cAAA,OAAKoB,UAAU,OACbtB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,UACxBL,EAAAC,EAAAC,cAAC8F,EAAD,CAAQjG,OAAQiF,KAAKI,mBACrBpF,EAAAC,EAAAC,cAAC+F,EAAD,CACExC,QAASA,EACTD,UAAWA,EACXD,SAAUA,EACVD,UAAW,SAAA4C,GAAK,OAAIL,EAAKR,SAAS,SAAAC,GAAK,OAAAxC,OAAAyC,EAAA,EAAAzC,CAAA,GAAUwC,EAAV,CAAiB7B,QAASyC,OACjE7C,kBAAmB,kBACjBwC,EAAKR,SAAS,SAAAC,GAAK,OAAAxC,OAAAyC,EAAA,EAAAzC,CAAA,GAAUwC,EAAV,CAAiB9B,WAAY8B,EAAM9B,eAExDJ,iBAAkB,kBAChByC,EAAKR,SAAS,SAAAC,GAAK,OAAAxC,OAAAyC,EAAA,EAAAzC,CAAA,GAAUwC,EAAV,CAAiB/B,UAAW+B,EAAM/B,gBAGzDvD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMK,MAAI,GACRR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,WAAS,GACbJ,EAAAC,EAAAC,cAAC6F,EAAA,MAAD,CACEI,MAAO3B,EACP4B,UAAW,CACTC,MAAMvD,OAAAyC,EAAA,EAAAzC,CAAA,GACAU,EAAY,CAAE8C,qBAAsB,QAAW,GAC/C/C,EAAW,CAAEgD,gBAAiB,IAAO,IAE3C9C,QAASA,IAGV,SAAA3D,GAA8B,IAA3B0G,EAA2B1G,EAA3B0G,KAAMpF,EAAqBtB,EAArBsB,MACR,OAD6BtB,EAAd2G,QAEbzG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAgBM,QAAQ,QAAQiG,MAAO,CAAEC,MAAO,UAC9CvF,EACFpB,EAAAC,EAAAC,cAAC0G,EAAD,CAAOxF,MAAOA,IAEdpB,EAAAC,EAAAC,cAAC2G,EAAD,CAAWnE,UAAW8D,EAAK9D,iBAOvC1C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2G,YAAY,EACZC,KAAMvB,EACNwB,QAAShC,KAAKI,iBACd6B,kBAAgB,eAEhBjH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAagC,GAAG,eAAe,qBAC/BnC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,8HAKFH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQS,QAASoE,KAAKI,iBAAkBzE,MAAM,WAA9C,iBAGAX,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQS,QAASoE,KAAKS,oBAAqB9E,MAAM,UAAUuG,WAAS,GAApE,yBAjFIC,aC3BEC,QACW,cAA7B1B,OAAOC,SAAS0B,UAEe,UAA7B3B,OAAOC,SAAS0B,UAEhB3B,OAAOC,SAAS0B,SAASC,MACvB,2DCZNC,IAASC,OAAOxH,EAAAC,EAAAC,cAACuH,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.9e06044b.chunk.js","sourcesContent":["import React from 'react'\nimport { Grid, Typography, IconButton } from '@material-ui/core'\nimport HelpIcon from '@material-ui/icons/Help'\n\nconst Header = ({ onHelp }) => (\n  <Grid container direction=\"row\" alignItems=\"center\" spacing={16}>\n    <Grid item>\n      <Typography variant=\"title\">The Graph ETHDenver dApp</Typography>\n    </Grid>\n    <Grid item>\n      <IconButton\n        aria-label=\"Delete\"\n        color=\"secondary\"\n        onClick={() => onHelp && onHelp()}\n      >\n        <HelpIcon />\n      </IconButton>\n    </Grid>\n  </Grid>\n)\n\nexport default Header\n","import React from 'react'\nimport { Grid, Typography, createStyles, withStyles } from '@material-ui/core'\n\nconst errorStyles = theme =>\n  createStyles({\n    errorText: {\n      fontFamily: 'Inconsolata, Monaco, monospace',\n    },\n  })\n\nconst Error = ({ classes, error }) => (\n  <Grid container direction=\"column\">\n    <Grid item>\n      <Typography variant=\"h6\" component=\"h3\" className={classes.displayName}>\n        Error\n      </Typography>\n    </Grid>\n    <Grid item>\n      <Grid container>\n        <Typography mode=\"paragraph\" color=\"secondary\">\n          <pre className={classes.errorText}>{JSON.stringify(error, undefined, 2)}</pre>\n        </Typography>\n      </Grid>\n    </Grid>\n  </Grid>\n)\n\nexport default withStyles(errorStyles)(Error)\n","import React from 'react'\nimport {\n  Card,\n  CardContent,\n  CardActionArea,\n  CardMedia,\n  Grid,\n  Typography,\n  createStyles,\n  withStyles,\n} from '@material-ui/core'\n\nconst gravatarStyles = theme =>\n  createStyles({\n    actionArea: {\n      maxWidth: 300,\n    },\n    image: {\n      height: 150,\n    },\n    displayName: {\n      textOverflow: 'ellipsis',\n      overflow: 'hidden',\n    },\n    id: {\n      textOverflow: 'ellipsis',\n      overflow: 'hidden',\n    },\n    owner: {\n      textOverflow: 'ellipsis',\n      overflow: 'hidden',\n    },\n  })\n\nconst Gravatar = ({ classes, id, displayName, imageUrl, owner }) => (\n  <Grid item>\n    <Card>\n      <CardActionArea className={classes.actionArea}>\n        {imageUrl && (\n          <CardMedia className={classes.image} image={imageUrl} title={displayName} />\n        )}\n        <CardContent>\n          <Typography variant=\"h6\" component=\"h3\" className={classes.displayName}>\n            {displayName || '—'}\n          </Typography>\n          <Typography color=\"textSecondary\">ID</Typography>\n          <Typography component=\"p\" className={classes.id}>\n            {id}\n          </Typography>\n          <Typography color=\"textSecondary\">Owner</Typography>\n          <Typography component=\"p\" className={classes.owner}>\n            {owner}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  </Grid>\n)\n\nconst StyledGravatar = withStyles(gravatarStyles)(Gravatar)\n\nconst gravatarsStyles = theme =>\n  createStyles({\n    title: {\n      marginTop: theme.spacing.unit * 2,\n    },\n  })\n\nconst Gravatars = ({ classes, gravatars }) => (\n  <Grid container direction=\"column\" spacing={16}>\n    <Grid item>\n      <Typography variant=\"title\" className={classes.title}>\n        {gravatars.length} Gravatars\n      </Typography>\n    </Grid>\n    <Grid item>\n      <Grid container direction=\"row\" spacing={16}>\n        {gravatars.map(gravatar => (\n          <StyledGravatar key={gravatar.id} {...gravatar} />\n        ))}\n      </Grid>\n    </Grid>\n  </Grid>\n)\n\nexport default withStyles(gravatarsStyles)(Gravatars)\n","import React from 'react'\nimport {\n  Grid,\n  Select,\n  FormControlLabel,\n  MenuItem,\n  Checkbox,\n  createStyles,\n  withStyles,\n} from '@material-ui/core'\n\nconst filterStyles = theme =>\n  createStyles({\n    orderBySelect: {\n      marginLeft: theme.spacing.unit,\n    },\n  })\n\nconst Filter = ({\n  classes,\n  onToggleWithName,\n  onToggleWithImage,\n  onOrderBy,\n  withName,\n  withImage,\n  orderBy,\n}) => (\n  <Grid item>\n    <Grid container direction=\"row\">\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={withName}\n            onChange={event => onToggleWithName && onToggleWithName()}\n          />\n        }\n        label=\"With names\"\n      />\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={withImage}\n            onChange={event => onToggleWithImage && onToggleWithImage()}\n          />\n        }\n        label=\"With images\"\n      />\n      <FormControlLabel\n        control={\n          <Select\n            className={classes.orderBySelect}\n            value={orderBy}\n            onChange={event => onOrderBy && onOrderBy(event.target.value)}\n          >\n            <MenuItem value=\"id\">ID</MenuItem>\n            <MenuItem value=\"imageUrl\">Image</MenuItem>\n            <MenuItem value=\"displayName\">Name</MenuItem>\n            <MenuItem value=\"owner\">Owner</MenuItem>\n          </Select>\n        }\n        label=\"Order By:\"\n        labelPlacement=\"start\"\n      />\n    </Grid>\n  </Grid>\n)\n\nconst StyledFilter = withStyles(filterStyles)(Filter)\n\nexport default StyledFilter\n","import React, { Component } from 'react'\nimport ApolloClient, { gql, InMemoryCache } from 'apollo-boost'\nimport { ApolloProvider, Query } from 'react-apollo'\nimport {\n  Grid,\n  LinearProgress,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Button,\n} from '@material-ui/core'\nimport './App.css'\nimport Header from './components/Header'\nimport Error from './components/Error'\nimport Gravatars from './components/Gravatars'\nimport Filter from './components/Filter'\n\nif (!process.env.REACT_APP_GRAPHQL_ENDPOINT) {\n  throw new Error('REACT_APP_GRAPHQL_ENDPOINT environment variable not defined')\n}\n\nconst client = new ApolloClient({\n  uri: process.env.REACT_APP_GRAPHQL_ENDPOINT,\n  cache: new InMemoryCache(),\n})\n\nconst GRAVATARS_QUERY = gql`\n  query gravatars($where: Gravatar_filter!, $orderBy: Gravatar_orderBy!) {\n    gravatars(first: 100, where: $where, orderBy: $orderBy, orderDirection: asc) {\n      id\n      owner\n      displayName\n      imageUrl\n    }\n  }\n`\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      withImage: false,\n      withName: false,\n      orderBy: 'displayName',\n      showHelpDialog: false,\n    }\n  }\n\n  toggleHelpDialog = () => {\n    this.setState(state => ({ ...state, showHelpDialog: !state.showHelpDialog }))\n  }\n\n  gotoQuickStartGuide = () => {\n    window.location.href = 'https://thegraph.com/docs/quick-start'\n  }\n\n  render() {\n    const { withImage, withName, orderBy, showHelpDialog } = this.state\n\n    return (\n      <ApolloProvider client={client}>\n        <div className=\"App\">\n          <Grid container direction=\"column\">\n            <Header onHelp={this.toggleHelpDialog} />\n            <Filter\n              orderBy={orderBy}\n              withImage={withImage}\n              withName={withName}\n              onOrderBy={field => this.setState(state => ({ ...state, orderBy: field }))}\n              onToggleWithImage={() =>\n                this.setState(state => ({ ...state, withImage: !state.withImage }))\n              }\n              onToggleWithName={() =>\n                this.setState(state => ({ ...state, withName: !state.withName }))\n              }\n            />\n            <Grid item>\n              <Grid container>\n                <Query\n                  query={GRAVATARS_QUERY}\n                  variables={{\n                    where: {\n                      ...(withImage ? { imageUrl_starts_with: 'http' } : {}),\n                      ...(withName ? { displayName_not: '' } : {}),\n                    },\n                    orderBy: orderBy,\n                  }}\n                >\n                  {({ data, error, loading }) => {\n                    return loading ? (\n                      <LinearProgress variant=\"query\" style={{ width: '100%' }} />\n                    ) : error ? (\n                      <Error error={error} />\n                    ) : (\n                      <Gravatars gravatars={data.gravatars} />\n                    )\n                  }}\n                </Query>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Dialog\n            fullScreen={false}\n            open={showHelpDialog}\n            onClose={this.toggleHelpDialog}\n            aria-labelledby=\"help-dialog\"\n          >\n            <DialogTitle id=\"help-dialog\">{'Show Quick Guide?'}</DialogTitle>\n            <DialogContent>\n              <DialogContentText>\n                We have prepared a quick guide for you to get started with The Graph at\n                this hackathon. Shall we take you there now?\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={this.toggleHelpDialog} color=\"primary\">\n                Nah, I'm good\n              </Button>\n              <Button onClick={this.gotoQuickStartGuide} color=\"primary\" autoFocus>\n                Yes, pease\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </div>\n      </ApolloProvider>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}